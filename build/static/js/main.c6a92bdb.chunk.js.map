{"version":3,"sources":["reducer.js","backEnd/socket.js","components/MainBlock/MainBlock.jsx","components/Chat/Chat.jsx","App.js","index.js"],"names":["state","action","type","joined","roomId","payload","userName","users","messages","socket","io","MainBlock","onLogin","React","useState","setRoomId","setUserName","isLoading","setLoading","onEnter","a","alert","obj","axios","post","className","TextField","style","id","onChange","event","target","value","label","variant","Button","disabled","onClick","color","Chat","onAddMessage","messageValue","setMessageValue","messagesRef","useRef","onSendMessage","emit","text","useEffect","current","scrollTo","timeOfCorr","moment","format","Grid","container","item","xs","Typography","component","Paper","chatSection","borderRight500","length","map","name","index","List","ListItem","button","ListItemIcon","Avatar","alt","src","Divider","padding","fullWidth","ListItemText","primary","secondary","align","ref","messageArea","message","onKeyDown","key","e","Fab","aria-label","App","useReducer","reducer","dispatch","get","data","setUsers","addMessage","on","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6a92bdb.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'JOINED':\r\n            return {\r\n                ...state,\r\n                joined: true,\r\n                roomId: action.payload.roomId,\r\n                userName: action.payload.userName,\r\n\r\n            };\r\n        // Следить за потоком\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            };\r\n        // сохранение сообщений\r\n        case 'SET_DATA':\r\n            return {\r\n                ...state,\r\n                users: action.payload.users,\r\n                messages: action.payload.messages\r\n            };\r\n        //Отправка сообщений\r\n        case 'NEW_MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","// ДЕСЬ ВСЯ РАБОТА С СОКЕТАМИ!!!\nimport io from 'socket.io-client';\n// НЕ ВЕРНОЕ РЕШЕНИЕ!!!\n// const socket = io('http://localhost:9999')\n// const socket = io();\n// ВЕРНОЕ РЕШЕНИЕ ПОЛИТИКА CORS\n/**\n *\n * @type {Socket}\n * const socket = io('http://localhost:9999', {transports: ['websocket']})\n * это надо использовать в package.json\n * ВАЖНО СМОТРЕТЬ НИЖЕ, СОККЕТЫ ПЕРЕНЕСЕНЫ В PACKAGE.JSON\n */\nlet socket = io();\nexport default socket;","import React from 'react';\nimport {Button, TextField} from \"@material-ui/core\";\nimport axios from 'axios';\n\n\n\n\n\nconst MainBlock = ({ onLogin }) => {\n    /**********************************************************************/\n    const [roomId, setRoomId] = React.useState('');\n    const inpOneState = (event) => {\n        setRoomId(event.target.value)\n    }\n    /**********************************************************************/\n    const [userName, setUserName] = React.useState('');\n    const inpTwoState = (event) => {\n        setUserName(event.target.value)\n    }\n    /**********************************************************************/\n    const [isLoading, setLoading] = React.useState(false);\n    /**********************************************************************/\n    const onEnter = async () => {\n        if (!roomId || !userName) {\n            return alert('Неверные данные');\n        }\n        const obj = {\n            roomId,\n            userName,\n        };\n        setLoading(true);\n        await axios.post('/rooms', obj)\n        onLogin(obj);\n    };\n    /**********************************************************************/\n\n    return (\n        <div className='wrapper'>\n            <div className='joinBlock'>\n                <TextField style={{'backgroundColor': \"white\"}}\n                    id=\"outlined-basic2\"\n                    onChange={inpOneState}\n                    label=\"Номер Комнаты\" variant=\"outlined\" type='text' value={roomId}/>\n                <TextField style={{'display': \"flex\", 'marginTop': '10px',\n                    'width': '222px',\n                    'flexDirection': \"column\",\n                    'backgroundColor': \"white\"}}\n                           id=\"outlined-basic1\"\n                           onChange={inpTwoState}\n                           label=\"Ваше Имя\" variant=\"outlined\" type='text' value={userName}/>\n                <Button disabled={isLoading} onClick={onEnter} style={{'display': \"block\", 'marginTop': '10px', 'padding': '6px 86px'}}\n                        variant=\"contained\" color=\"primary\">\n                    {isLoading ? 'ВХОД...' : 'ВОЙТИ'}\n                </Button>\n            </div>\n        </div>\n    );\n};\nexport default MainBlock;\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport style from './style.css';\r\nimport socket from './../../backEnd/socket';\r\n    //Установка времени, во время переписки\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nconst Chat = ({users, messages, userName, roomId, onAddMessage}) => {\r\n    const [messageValue, setMessageValue] = React.useState('');\r\n    const messagesRef = React.useRef(null);\r\n\r\n    const onSendMessage = () => {\r\n        socket.emit('ROOM:NEW_MESSAGE', {\r\n            userName,\r\n            roomId,\r\n            text: messageValue,\r\n        });\r\n        onAddMessage({userName, text: messageValue});\r\n        //для очистки сообщения!!!\r\n        setMessageValue('');\r\n    };\r\n\r\n// Работа c ENTER\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            return onSendMessage()\r\n        }\r\n\r\n    }\r\n    // при вводе сообщения скролл пролистывается вниз. ВАЖНО!!!\r\n    React.useEffect(() => {\r\n        messagesRef.current.scrollTo(0, 999999)\r\n    }, [messages])\r\n\r\n    //Установка хранометража времени!!!\r\n    const timeOfCorr = moment().format(\"YYYY-MM-DD HH:mm\");\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='shell'>\r\n                <Grid container>\r\n                    <Grid item={true} xs={12}>\r\n                        <Typography variant=\"h3\" className=\"header-message\" >Chat</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container component={Paper} className={style.chatSection}>\r\n                    <Grid item={true} xs={3} className={style.borderRight500}>\r\n                        <div className=\"chat-users\">\r\n                            Комната: {roomId}\r\n                            <hr/>\r\n                            <b>Онлайн : {users.length}</b>\r\n                            <hr/>\r\n                            <ul>\r\n                                {users.map((name, index) => (\r\n                                    <li key={name + index}>{name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        <List style={{'height': '10.5%'}}>\r\n                            <ListItem button key=\"RemySharp\">\r\n                                <ListItemIcon>\r\n                                    <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\"/>\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider/>\r\n                        <Grid item xs={12} style={{padding: '10px'}}>\r\n                            <TextField id=\"outlined-basic-email\" label=\"Search\" variant=\"outlined\" fullWidth/>\r\n                        </Grid>\r\n                        <Divider/>\r\n\r\n                        <List>\r\n\r\n                            <ListItem button key=\"RemySharp\">\r\n                                <ListItemIcon>\r\n                                    <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\"/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Remy Sharp\">Remy Sharp</ListItemText>\r\n                                <ListItemText secondary=\"online\" align=\"right\"/>\r\n                            </ListItem>\r\n\r\n                            <ListItem button key=\"Alice\">\r\n                                <ListItemIcon>\r\n                                    <Avatar alt=\"Alice\" src=\"https://material-ui.com/static/images/avatar/3.jpg\"/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Alice\">Alice</ListItemText>\r\n                                <ListItemText secondary=\"online\" align=\"right\"/>\r\n                            </ListItem>\r\n\r\n                            <ListItem button key=\"CindyBaker\">\r\n                                <ListItemIcon>\r\n                                    <Avatar alt=\"Cindy Baker\" src=\"https://material-ui.com/static/images/avatar/2.jpg\"/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Cindy Baker\">Cindy Baker</ListItemText>\r\n                                <ListItemText secondary=\"online\" align=\"right\"/>\r\n                            </ListItem>\r\n\r\n                        </List>\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <List ref={messagesRef} className={style.messageArea}\r\n                              style={{'overflowY': \"scroll\", 'height': '328px'}}>\r\n                            {\r\n                                messages.map((message, index) => (\r\n\r\n                                    <ListItem key={index}>\r\n                                        <Grid container>\r\n                                            <Grid item xs={12}>\r\n                                                <ListItemText className='list-text'\r\n                                                    align=\"right\"\r\n                                                    primary={message.text} />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <span>{message.userName}</span>\r\n                                                <ListItemText\r\n                                                    align=\"right\"\r\n                                                    secondary={timeOfCorr}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </ListItem>\r\n                                ))}\r\n                        </List>\r\n                        <Divider/>\r\n                        <Grid container style={{'padding': '20px', 'marginTop': '17%',}}>\r\n                            <Grid item xs={11}>\r\n                                <TextField value={messageValue}\r\n                                           onKeyDown={handleKeyPress}\r\n                                           onChange={(e) => setMessageValue(e.target.value)}\r\n                                           id=\"outlined-basic-email#2\"\r\n                                           label=\"Введите сообщение\" fullWidth/>\r\n                            </Grid>\r\n                            <Grid item={true} xs={1} align=\"right\">\r\n                                <Fab onClick={onSendMessage} color=\"primary\" aria-label=\"add\">Send</Fab>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n\r\n","import React from 'react';\nimport reducer from \"./reducer\";\nimport socket from './backEnd/socket';\nimport axios from 'axios';\n\n//Компоненты\nimport MainBlock from \"./components/MainBlock/MainBlock.jsx\";\nimport Chat from './components/Chat/Chat'\n\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(reducer, {\n        joined: false,\n        roomId: null,\n        userName: null,\n        users: [],\n        messages: []\n    })\n    /**********************************************************************/\n    const onLogin = async (obj) => {\n        dispatch({\n            type: 'JOINED',\n            payload: obj\n        });\n        socket.emit('ROOM:JOIN', obj)\n        const {data} = await axios.get(`/rooms/${obj.roomId}`);\n        // setUsers(data.users);\n        //ЗДЕСЬ СОХРАНЕНИЕ ИСТОРИИ СООБЩЕНИЙ\n        dispatch({\n            type: 'SET_DATA',\n            payload: data\n        });\n    }\n\n    const setUsers = (users) => {\n        dispatch({\n            type: 'SET_USERS',\n            payload: users\n        });\n    }\n\n    //НИЖЕ ПРИ ПЕРЕПИСКЕ ФОРМИРУТСЯ ВЕТКА ДЛЯ ПРОСМОТРА СВОЕГО СООБЩЕНИЯ\n    //В РЕЗУЛЬТАТЕ МЫ ВИДЕМ И СВОИ СООБЩЕНИЯ И ПРИНЯТЫЕ!!!\n\n    const addMessage = (message) => {\n        dispatch({\n            type: 'NEW_MESSAGE',\n            payload: message\n        })\n\n    }\n\n    /**********************************************************************/\n    //React.useEffect = ХУК-здесь получают только актуальные данные о том кто зашел в комнату\n    //попробовав без него, увидеш разницу!!!\n    // СОКРАТИЛИ В 3 СТРОКИ!!!\n    React.useEffect(() => {\n        socket.on('ROOM:SET_USERS', setUsers)\n        socket.on('ROOM:NEW_MESSAGE', addMessage)\n    }, [])\n\n    /**********************************************************************/\n    window.socket = socket\n    // console.log(state)\n    return (\n        <div>\n            {!state.joined ?\n                <MainBlock onLogin={onLogin}/>\n                :\n                <Chat {...state} onAddMessage={addMessage}/>}\n        </div>\n    );\n}\n\nexport default App;\n\n// Если юзер не авторизован, то он получает форму ВХОДА, если проверка пройдена,\n// теряется блок с комната/имя\n//\n//!state.joined && <MainBlock onLogin={onLogin}/>}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}